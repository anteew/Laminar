name: Release & Publish (npm private)

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  preflight-test-github-install:
    uses: ./.github/workflows/test-github-install.yml
    secrets: inherit

  preflight-integration-tests:
    uses: ./.github/workflows/integration-tests.yml
    secrets: inherit

  preflight-install-validate:
    uses: ./.github/workflows/install-validate.yml
    secrets: inherit

  preflight:
    runs-on: ubuntu-latest
    needs:
      - preflight-test-github-install
      - preflight-integration-tests
      - preflight-install-validate
    steps:
      - run: echo "All preflight checks passed."

  release:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install
        run: npm ci || npm install

      - name: Build
        run: npm run build

      - name: Extract version from tag
        id: v
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Verify package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${{ steps.v.outputs.VERSION }}"
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "::error::package.json version ($PACKAGE_VERSION) does not match tag ($TAG_VERSION)."
            echo "To fix:"
            echo "  1) Update package.json \"version\" to $TAG_VERSION"
            echo "  2) Commit the change"
            echo "  3) Recreate the tag: git tag -d v$TAG_VERSION && git tag v$TAG_VERSION && git push --tags -f"
            exit 1
          fi

      - name: Publish to npm (private scoped)
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
